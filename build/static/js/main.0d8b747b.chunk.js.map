{"version":3,"sources":["utils/utils.ts","constants/apiPaths.ts","store/cartSlice.ts","components/AddProductToCart/AddProductToCart.tsx","components/pages/PageProducts/components/Products.tsx","components/pages/PageProducts/PageProducts.tsx","components/MainLayout/components/Cart.tsx","components/MainLayout/components/Header.tsx","components/MainLayout/MainLayout.tsx","models/Product.ts","components/PaperLayout/PaperLayout.tsx","components/pages/PageProductForm/PageProductForm.tsx","components/CartItems/CartItems.tsx","components/pages/PageCart/components/ReviewCart.tsx","components/pages/PageCart/components/ReviewOrder.tsx","models/Order.ts","components/pages/PageCart/PageCart.tsx","components/pages/PageOrders/components/Orders.tsx","components/pages/PageOrders/PageOrders.tsx","constants/order.tsx","components/pages/PageOrder/PageOrder.tsx","components/pages/admin/PageProductImport/components/ProductsTable.tsx","components/pages/admin/PageProductImport/components/CSVFileImport.tsx","components/pages/admin/PageProductImport/PageProductImport.tsx","components/App/App.tsx","store/counterSlice.ts","store/store.ts","serviceWorker.ts","index.tsx"],"names":["priceFormatter","Intl","NumberFormat","style","currency","formatAsPrice","price","format","API_PATHS","product","order","import","bff","cart","cartSlice","createSlice","name","initialState","items","reducers","updateFromApi","state","payload","addToCart","action","existingItem","find","i","id","count","push","removeFromCart","filter","clearCart","dispatch","getState","a","actions","axios","put","headers","Authorization","localStorage","getItem","selectCartItems","AddProductToCart","useDispatch","cartItem","useSelector","IconButton","onClick","color","Typography","align","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","backgroundColor","palette","background","paper","padding","spacing","Products","classes","useState","products","setProducts","useEffect","productList","Grid","container","map","index","item","key","xs","sm","md","Card","className","CardMedia","image","title","CardContent","gutterBottom","variant","component","CardActions","content","PageProducts","Cart","get","then","data","badgeContent","length","undefined","aria-label","Link","to","Badge","createStyles","root","menuButton","marginRight","homeLink","textDecoration","Header","React","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Copyright","href","Date","getFullYear","paddingBottom","MainLayout","children","Container","maxWidth","ProductSchema","Yup","shape","required","description","layout","width","marginLeft","breakpoints","up","marginTop","marginBottom","PaperLayout","Paper","Form","props","dirty","isSubmitting","isValid","handleSubmit","onSubmit","autoComplete","TextField","label","fullWidth","multiline","justify","Button","type","disabled","emptyValues","cast","PageProductForm","history","useHistory","useParams","setProduct","isLoading","setIsLoading","res","initialValues","validationSchema","values","formattedValues","productToSave","listItem","total","fontWeight","CartItems","isEditable","totalPrice","reduce","List","disablePadding","ListItem","ListItemText","primary","secondary","ReviewCart","cartItems","Fragment","ReviewOrder","address","firstName","lastName","direction","comment","AddressSchema","default","defined","OrderItemSchema","productId","integer","positive","OrderSchema","of","status","stepper","buttons","justifyContent","button","steps","initialAddressValues","CartIsEmpty","Success","PageCart","activeStep","setActiveStep","isCartEmpty","setAddress","isFormValid","setIsFormValid","Stepper","Step","StepLabel","enableReinitialize","isInitialValid","Orders","orders","setOrders","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","statusHistory","toUpperCase","size","delete","PageOrders","ORDER_STATUS","ORDER_STATUS_FLOW","helperText","select","value","PageOrder","setOrder","setCartItems","promises","Promise","all","p","lastStatusItem","statusHistoryItem","timestamp","toString","ProductsTable","CSVFileImport","url","file","setFile","uploadFile","e","method","params","encodeURIComponent","response","console","log","fetch","body","result","onChange","files","target","dataTransfer","PageProductImport","Box","alignItems","App","path","exact","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","cartReducer","window","location","hostname","match","interceptors","use","error","alert","reject","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"u3CAAMA,EAAiB,IAAIC,KAAKC,aAAa,QAAS,CACpDC,MAAO,WACPC,SAAU,QAGCC,EAAgB,SAACC,GAAD,OAAmBN,EAAeO,OAAOD,I,iHCIvDE,EARG,CAChBC,QAAS,mDACTC,MAAO,mDACPC,OAAQ,mDACRC,IAAK,mDACLC,KAAM,oD,iBCSKC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAN8B,CAC9BC,MAAO,IAMPC,SAAU,CACRC,cAAe,SAACC,EAAD,GAA8D,IAAzCH,EAAwC,EAAnDI,QAAWJ,MAClC,MAAO,CACLA,MAAM,YACCA,KAKXK,UAAW,SAACF,EAAOG,GACjB,IAAON,EAASG,EAATH,MACST,EAAWe,EAApBF,QACDG,EAAeP,EAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,QAAQmB,KAAOnB,EAAQmB,MAC1DH,EACFA,EAAaI,QAGfX,EAAMY,KAAK,CAACrB,UAASoB,MAAO,KAG9BE,eAAgB,SAACV,EAAOG,GACtB,IAAKN,EAASG,EAATH,MACWT,EAAWe,EAApBF,QACDG,EAAeP,EAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,QAAQmB,KAAOnB,EAAQmB,MACzDH,IACDA,EAAaI,MAAQ,EACvBJ,EAAaI,QAGfR,EAAMH,MAAQA,EAAMc,QAAO,SAAAL,GAAC,OAAIA,EAAElB,QAAQmB,KAAOnB,EAAQmB,QAE3DK,UAAW,SAACZ,GACVA,EAAMH,MAAQ,OAKPK,EAAY,SAACd,GAAD,8CAAsB,WAAOyB,EAAeC,GAAtB,iBAAAC,EAAA,6DAC7CF,EAASpB,EAAUuB,QAAQd,UAAUd,IADQ,EAEjB0B,IAAZjB,EAF6B,EAErCL,KAAQK,MAF6B,SAGvCoB,IAAMC,IAAN,UAAa/B,EAAUK,KAAvB,iBAA4C,CAAEK,SAAS,CAC3DsB,QAAS,CACPC,cAAc,SAAD,OAAWC,aAAaC,QAAQ,2BALJ,2CAAtB,yDA8BXvB,EAAiBN,EAAUuB,QAA3BjB,cAMDwB,EAAkB,SAACvB,GAAD,OAAsBA,EAAMR,KAAKK,OAEjDJ,IAAf,QC/Ee,SAAS+B,EAAT,GAA6D,IAAlCpC,EAAiC,EAAjCA,QAClCyB,EAAWY,cAEXC,EADYC,YAAYJ,GACHlB,MAAK,SAAAC,GAAC,OAAIA,EAAElB,QAAQmB,KAAOnB,EAAQmB,MAE9D,OACE,oCAEEmB,EAEI,oCACE,kBAACE,EAAA,EAAD,CAAYC,QAAS,kBAAMhB,EDwCT,SAACzB,GAAD,8CAAsB,WAAOyB,EAAeC,GAAtB,iBAAAC,EAAA,6DAClDF,EAASpB,EAAUuB,QAAQN,eAAetB,IADQ,EAEtB0B,IAAZjB,EAFkC,EAE1CL,KAAQK,MAFkC,SAG5CoB,IAAMC,IAAN,UAAa/B,EAAUK,KAAvB,iBAA4C,CAAEK,SAAS,CAC3DsB,QAAS,CACPC,cAAc,SAAD,OAAWC,aAAaC,QAAQ,2BALC,2CAAtB,wDCxCkBZ,CAAetB,MACjD,kBAAC,IAAD,CAAQ0C,MAAO,eAEjB,kBAACC,EAAA,EAAD,CAAYC,MAAM,UACfN,EAASlB,OAEZ,kBAACoB,EAAA,EAAD,CAAYC,QAAS,kBAAMhB,EAASX,EAAUd,MAC5C,kBAAC,IAAD,CAAK0C,MAAO,gBAMhB,kBAACF,EAAA,EAAD,CAAYC,QAAS,kBAAMhB,EAASX,EAAUd,MAC5C,kBAAC,IAAD,CAAU0C,MAAO,gB,aCxBvBG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTC,WAAY,UAEdC,YAAa,CACXC,SAAU,GAEZC,OAAQ,CACNC,gBAAiBV,EAAMW,QAAQC,WAAWC,MAC1CC,QAASd,EAAMe,QAAQ,QAIZ,SAASC,IACtB,IAAMC,EAAUnB,IAChB,EAAgCoB,mBAAoB,IAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,qBAAU,WAGRD,EAAYE,KACX,IAGD,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,GACtBI,EAASM,KAAI,SAACxE,EAAkByE,GAAnB,OACZ,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAK3E,EAAQmB,GAAIyD,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC7C,kBAACC,EAAA,EAAD,CAAMC,UAAWhB,EAAQhB,MACvB,kBAACiC,EAAA,EAAD,CACED,UAAWhB,EAAQZ,UACnB8B,MAAK,iDAA4CT,GACjDU,MAAM,gBAER,kBAACC,EAAA,EAAD,CAAaJ,UAAWhB,EAAQV,aAC9B,kBAACX,EAAA,EAAD,CAAY0C,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CvF,EAAQmF,OAEX,kBAACxC,EAAA,EAAD,KACG/C,EAAcI,EAAQH,SAG3B,kBAAC2F,EAAA,EAAD,KACE,kBAACpD,EAAD,CAAkBpC,QAASA,WC1DzC,IAAM6C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,QAAS,CACP5B,QAASd,EAAMe,QAAQ,EAAG,EAAG,QAIlB,SAAS4B,IACtB,IAAM1B,EAAUnB,IAEhB,OACE,yBAAKmC,UAAWhB,EAAQyB,SACtB,kBAAC1B,EAAD,O,uGCLS,SAAS4B,KACtB,IAAMlE,EAAWY,cACjB+B,qBAAU,WACRvC,IAAM+D,IAAN,UACO7F,EAAUK,KADjB,iBAEI,CACE2B,QAAS,CACPC,cAAc,SAAD,OAAWC,aAAaC,QAAQ,2BAGnD2D,MAAK,YAAmC,IAAhBzF,EAAe,EAA/B0F,KAAQA,KAAQ1F,KACxBqB,EAASd,EAAcP,SAExB,CAACqB,IACJ,IACMsE,EADYxD,YAAYJ,GACC6D,aAAUC,EAEzC,OACE,kBAACzD,EAAA,EAAD,CACE0D,aAAW,mBACXxD,MAAM,UACN6C,UAAWY,KACXC,GAAG,SAEH,kBAACC,EAAA,EAAD,CAAON,aAAcA,EAAcrD,MAAM,aACvC,kBAAC,IAAD,QCrBR,IAAMG,GAAYC,aAAW,SAACC,GAAD,OAC3BuD,YAAa,CACXC,KAAM,CACJhD,SAAU,GAEZiD,WAAY,CACVC,YAAa1D,EAAMe,QAAQ,IAE7BqB,MAAO,CACL5B,SAAU,GAEZmD,SAAU,CACRhE,MAAO,QACPiE,eAAgB,aAKP,SAASC,KACtB,IAAM5C,EAAUnB,KAChB,EAAgCgE,IAAM5C,SAA6B,MAAnE,mBAAO6C,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GAOfI,EAAc,WAClBH,EAAY,OAGd,OACE,kBAACI,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAAC1E,EAAA,EAAD,CAAY2C,QAAQ,KAAKN,UAAWhB,EAAQmB,OAC1C,kBAAC,KAAD,CAAMH,UAAWhB,EAAQ0C,SAAUN,GAAG,KAAtC,kBAIA,6BACE,kBAAC5D,EAAA,EAAD,CACE0D,aAAW,0BACXoB,gBAAc,cACdC,gBAAc,OACd9E,QArBO,SAAC+E,GAClBT,EAAYS,EAAMC,gBAqBR/E,MAAM,WAEN,kBAAC,IAAD,OAEF,kBAACgF,EAAA,EAAD,CACEvG,GAAG,cACH2F,SAAUA,EACVa,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdb,KAAMA,EACNgB,QAASd,GAET,kBAACe,EAAA,EAAD,CAAU1C,UAAWY,KAAMC,GAAG,gBAAgB3D,QAASyE,GAAvD,iBACA,kBAACe,EAAA,EAAD,CAAU1C,UAAWY,KAAMC,GAAG,kBAAkB3D,QAASyE,GAAzD,qBAIN,kBAACvB,GAAD,QC7ER,SAASuC,KACP,OACE,kBAACvF,EAAA,EAAD,CAAY2C,QAAQ,QAAQ5C,MAAM,gBAAgBE,MAAM,UACrD,kBACD,kBAACuD,EAAA,EAAD,CAAMzD,MAAM,UAAUyF,KAAK,4BAA3B,YAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAMxF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwB,UAAW,CACT+D,cAAevF,EAAMe,QAAQ,IAE/BN,OAAQ,CACNC,gBAAiBV,EAAMW,QAAQC,WAAWC,MAC1CC,QAASd,EAAMe,QAAQ,QAyBZyE,GArBc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACvBxE,EAAUnB,KAEhB,OACE,oCACE,kBAAC+D,GAAD,MACA,8BACE,kBAAC6B,EAAA,EAAD,CAAWzD,UAAWhB,EAAQO,UAAWmE,SAAS,MAC/CF,IAGL,4BAAQxD,UAAWhB,EAAQR,QACzB,kBAACb,EAAA,EAAD,CAAY2C,QAAQ,YAAY1C,MAAM,SAASF,MAAM,gBAAgB6C,UAAU,KAA/E,gCAGA,kBAAC2C,GAAD,S,sCCpCKS,GAAgBC,OAAaC,MAAM,CAC9C1D,MAAOyD,OAAaE,WACpBC,YAAaH,OACb/I,MAAO+I,OAAaE,a,qCCRhBjG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiG,OAAO,cACLC,MAAO,OACPC,WAAYnG,EAAMe,QAAQ,GAC1B2C,YAAa1D,EAAMe,QAAQ,IAC1Bf,EAAMoG,YAAYC,GAAG,IAAyB,EAAnBrG,EAAMe,QAAQ,IAAU,CAClDmF,MAAO,IACPC,WAAY,OACZzC,YAAa,SAGjB7C,MAAM,cACJyF,UAAWtG,EAAMe,QAAQ,GACzBwF,aAAcvG,EAAMe,QAAQ,GAC5BD,QAASd,EAAMe,QAAQ,IACtBf,EAAMoG,YAAYC,GAAG,IAAyB,EAAnBrG,EAAMe,QAAQ,IAAU,CAClDuF,UAAWtG,EAAMe,QAAQ,GACzBwF,aAAcvG,EAAMe,QAAQ,GAC5BD,QAASd,EAAMe,QAAQ,SAiBdyF,GAZc,SAAC,GAAiB,IAAhBf,EAAe,EAAfA,SACvBxE,EAAUnB,KAEhB,OACE,yBAAKmC,UAAWhB,EAAQgF,QACtB,kBAACQ,GAAA,EAAD,CAAOxE,UAAWhB,EAAQJ,OACvB4E,KCrBHiB,GAAO,SAACC,GACZ,IAIEC,EAiBED,EAjBFC,MACAC,EAgBEF,EAhBFE,aACAC,EAeEH,EAfFG,QAGAC,EAYEJ,EAZFI,aAcF,OACE,0BAAMC,SAAUD,EAAcE,aAAa,OACzC,kBAAC1F,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,GACvB,kBAACQ,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,IACb,kBAAC,KAAD,CACEW,UAAW0E,KACX1J,KAAK,QACL2J,MAAM,QACNC,WAAS,EACTH,aAAa,MACblB,UAAQ,KAGZ,kBAACxE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,IACb,kBAAC,KAAD,CACEW,UAAW0E,KACX1J,KAAK,cACL2J,MAAM,cACNC,WAAS,EACTH,aAAa,MACbI,WAAS,EACTtB,UAAQ,KAGZ,kBAACxE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEU,UAAW0E,KACX1J,KAAK,QACL2J,MAAM,YACNC,WAAS,EACTH,aAAa,MACblB,UAAQ,KAGZ,kBAACxE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEU,UAAW0E,KACX1J,KAAK,QACL2J,MAAM,QACNC,WAAS,EACTH,aAAa,MACblB,UAAQ,KAGZ,kBAACxE,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACK,GAAI,GAAIyF,QAAQ,iBACnC,kBAACC,GAAA,EAAD,CACE5H,MAAM,WADR,UAKA,kBAAC4H,GAAA,EAAD,CACEC,KAAK,SACLjF,QAAQ,YACR5C,MAAM,UACN8H,UAAWb,GAASC,IAAiBC,GAJvC,oBAcJY,GAAmB9B,GAAc+B,OAExB,SAASC,KACtB,IAAMC,EAAUC,eACT1J,EAAM2J,eAAN3J,GACP,EAA8B8C,mBAAyB,MAAvD,mBAAOjE,EAAP,KAAgB+K,EAAhB,KACA,EAAkC9G,oBAAkB,GAApD,mBAAO+G,EAAP,KAAkBC,EAAlB,KAqBA,OAZA7G,qBAAU,WACHjD,EAILU,IAAM+D,IAAN,UAAa7F,EAAUI,IAAvB,oBAAsCgB,IACnC0E,MAAK,SAAAqF,GACJH,EAAWG,EAAIpF,MACfmF,GAAa,MANfA,GAAa,KAQd,CAAC9J,IAEA6J,EAAkB,yCAGpB,kBAAC,GAAD,KACE,kBAACrI,EAAA,EAAD,CAAY4C,UAAU,KAAKD,QAAQ,KAAK1C,MAAM,UAC3CzB,EAAK,eAAiB,sBAEzB,kBAAC,KAAD,CACEgK,cAAenL,GAAWyK,GAC1BW,iBAAkBzC,GAClBoB,SA7BW,SAACsB,GAChB,IAAMC,EAAkB3C,GAAc+B,KAAKW,GACrCE,EAAgBpK,EAAE,6BAAOwH,GAAc+B,KAAKY,IAA1B,IAA4CnK,OAAMmK,EAC1EzJ,IAAMC,IAAN,UAAa/B,EAAUI,IAAvB,YAAsCoL,GACnC1F,MAAK,kBAAM+E,EAAQvJ,KAAK,yBA2BtB,SAACqI,GAAD,OAAsC,kBAAC,GAASA,O,gECjInD7G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyI,SAAU,CACR3H,QAASd,EAAMe,QAAQ,EAAG,IAE5B2H,MAAO,CACLC,WAAY,KAEdvG,MAAO,CACLkE,UAAWtG,EAAMe,QAAQ,QASd,SAAS6H,GAAT,GAAyD,IAArClL,EAAoC,EAApCA,MAAOmL,EAA6B,EAA7BA,WAClC5H,EAAUnB,KAEVgJ,EAAqBpL,EAAMqL,QAAO,SAACL,EAAO/G,GAAR,OAAkBA,EAAKtD,MAAQsD,EAAK1E,QAAQH,MAAQ4L,IAAQ,GAEpG,OACE,oCACE,kBAACM,GAAA,EAAD,CAAMC,gBAAc,GACjBvL,EAAM+D,KAAI,SAAClC,GAAD,OACT,kBAAC2J,GAAA,EAAD,CAAUjH,UAAWhB,EAAQwH,SAAU7G,IAAKrC,EAAStC,QAAQmB,IAC1DyK,GAAc,kBAACxJ,EAAD,CAAkBpC,QAASsC,EAAStC,UACnD,kBAACkM,GAAA,EAAD,CAAcC,QAAS7J,EAAStC,QAAQmF,MAAOiH,UAAW9J,EAAStC,QAAQ+I,cAC3E,kBAACpG,EAAA,EAAD,CACE2C,QAAQ,SAAS1F,EAAc0C,EAAStC,QAAQH,OADlD,MAC6DyC,EAASlB,MADtE,MACgFxB,EAAc0C,EAAStC,QAAQH,MAAQyC,EAASlB,YAGpI,kBAAC6K,GAAA,EAAD,CAAUjH,UAAWhB,EAAQwH,UAC3B,kBAACU,GAAA,EAAD,CAAcC,QAAQ,aACtB,kBAACxJ,EAAA,EAAD,CACE2C,QAAQ,SADV,SAGF,kBAAC2G,GAAA,EAAD,CAAUjH,UAAWhB,EAAQwH,UAC3B,kBAACU,GAAA,EAAD,CAAcC,QAAQ,UACtB,kBAACxJ,EAAA,EAAD,CAAY2C,QAAQ,YAAYN,UAAWhB,EAAQyH,OAChD7L,EAAciM,OC7CZ,SAASQ,KACtB,IAAMC,EAAY/J,YAAYJ,GAE9B,OACE,kBAAC,IAAMoK,SAAP,KACE,kBAAC5J,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,GAArC,iBAGA,kBAACsG,GAAD,CAAWlL,MAAO6L,EAAWV,YAAU,KCN7C,IAAM/I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoC,MAAO,CACLkE,UAAWtG,EAAMe,QAAQ,QASd,SAAS0I,GAAT,GAAyD,IAAnCC,EAAkC,EAAlCA,QAAShM,EAAyB,EAAzBA,MACtCuD,EAAUnB,KAEhB,OACE,kBAAC,IAAM0J,SAAP,KACE,kBAAC5J,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,GAArC,iBAGA,kBAACsG,GAAD,CAAWlL,MAAOA,EAAOmL,YAAY,IACrC,kBAACtH,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,GACvB,kBAACQ,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,GACrB,kBAAClC,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,EAACL,UAAWhB,EAAQmB,OAAzD,YAGA,kBAACxC,EAAA,EAAD,CAAY0C,cAAY,GAAEoH,EAAQC,UAAlC,IAA8CD,EAAQE,UACtD,kBAAChK,EAAA,EAAD,CAAY0C,cAAY,GAAEoH,EAAQA,UAEpC,kBAACnI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACqI,UAAU,SAAShI,GAAI,GAAIC,GAAI,GAClD,kBAAClC,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,EAACL,UAAWhB,EAAQmB,OAAzD,WAGA,kBAACxC,EAAA,EAAD,CAAY0C,cAAY,GAAEoH,EAAQI,YCtCrC,IAAMC,GAAgBlE,KAAW,CACtC8D,UAAW9D,OAAaE,WACxB6D,SAAU/D,OAAaE,WACvB2D,QAAS7D,OAAaE,WACtB+D,QAASjE,OAAamE,QAAQ,MAC7BC,UAKUC,GAAkBrE,KAAW,CACxCsE,UAAWtE,OAAaE,WACxB1H,MAAOwH,OAAauE,UAAUC,WAAWtE,aACxCkE,UAKUK,GAAczE,KAAW,CACpCzH,GAAIyH,OAAaE,WACjBrI,MAAOmI,OAAY0E,GAAGL,IACtBR,QAASK,GACTS,OAAQ3E,OAAaE,aACpBkE,UCNGnK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyK,QAAS,CACP3J,QAASd,EAAMe,QAAQ,EAAG,EAAG,IAE/B2J,QAAS,CACPvK,QAAS,OACTwK,eAAgB,YAElBC,OAAQ,CACNtE,UAAWtG,EAAMe,QAAQ,GACzBoF,WAAYnG,EAAMe,QAAQ,QAIxB8J,GAAQ,CAAC,mBAAoB,mBAAoB,qBAEjDC,GAA4Bf,GAAcpC,OAE1CoD,GAAc,kBAClB,kBAACnL,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,GAArC,6DAKI0I,GAAU,kBACd,kBAAC,IAAMxB,SAAP,KACE,kBAAC5J,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,GAArC,6BAGA,kBAAC1C,EAAA,EAAD,CAAY2C,QAAQ,aAApB,kFAwDW,SAAS0I,KACtB,IAAMhK,EAAUnB,KAChB,EAAoCgE,IAAM5C,SAAiB,GAA3D,mBAAOgK,EAAP,KAAmBC,EAAnB,KACM5B,EAAY/J,YAAYJ,GACxBgM,GAAe7B,EAAUtG,OAC/B,EAA8B/B,mBAAuB4J,IAArD,mBAAOpB,EAAP,KAAgB2B,EAAhB,KACA,EAAsCnK,oBAAkB,GAAxD,mBAAOoK,EAAP,KAAoBC,EAApB,KACM7M,EAAWY,cAqBjB,OACE,kBAAC,GAAD,KACE,kBAACM,EAAA,EAAD,CAAY4C,UAAU,KAAKD,QAAQ,KAAK1C,MAAM,UAA9C,YAGA,kBAAC2L,GAAA,EAAD,CAASN,WAAYA,EAAYjJ,UAAWhB,EAAQwJ,SACjDI,GAAMpJ,KAAI,SAAC0F,GAAD,OACT,kBAACsE,GAAA,EAAD,CAAM7J,IAAKuF,GACT,kBAACuE,GAAA,EAAD,KAAYvE,QAIlB,kBAAC,IAAMqC,SAAP,KACE,kBAAC,KAAD,CACEmC,oBAAoB,EACpBvD,cAAe0C,GACfzC,iBAAkB0B,GAClB6B,gBAAgB,EAChB5E,SAAU,eAET,SAACL,GACA,IAAO2B,EAAmB3B,EAAnB2B,OAAQxB,EAAWH,EAAXG,QAGf,OAFAuE,EAAW/C,GACXiD,EAAezE,GAEb,kBAAC,KAAD,KACGsE,GAA8B,IAAfF,GAAoB,kBAAC,GAAD,MACpB,IAAfA,IAAqBE,GAAe,kBAAC9B,GAAD,MACrB,IAAf4B,GAzGf,oCACE,kBAACtL,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,GAArC,oBAGA,kBAACf,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,GACvB,kBAACQ,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEU,UAAW0E,KACX1J,KAAK,WACL2J,MAAM,YACNC,WAAS,EACTH,aAAa,MACblB,UAAQ,KAGZ,kBAACxE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEU,UAAW0E,KACX1J,KAAK,YACL2J,MAAM,aACNC,WAAS,EACTH,aAAa,MACblB,UAAQ,KAGZ,kBAACxE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,IACb,kBAAC,KAAD,CACEW,UAAW0E,KACX1J,KAAK,UACL2J,MAAM,mBACNC,WAAS,EACTH,aAAa,MACbI,WAAS,KAGb,kBAAC9F,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,IACb,kBAAC,KAAD,CACEW,UAAW0E,KACX1J,KAAK,UACL2J,MAAM,UACNC,WAAS,EACTH,aAAa,MACbI,WAAS,OAgEa,IAAf6D,GAAoB,kBAACzB,GAAD,CAAaC,QAASA,EAAShM,MAAO6L,IAC3C,IAAf2B,GAAoB,kBAAC,GAAD,UAM5BA,GAAc,GAAK,yBAAKjJ,UAAWhB,EAAQyJ,SAC1B,IAAfQ,GACC,kBAAC3D,GAAA,EAAD,CAAQ7H,QA1CC,WACjByL,EAAcD,EAAa,IAyCUjJ,UAAWhB,EAAQ2J,QAAhD,SAIAQ,GACA,kBAAC7D,GAAA,EAAD,CACEhF,QAAQ,YACR5C,MAAM,UACND,QAjEO,WAEjB,GADAyL,EAAcD,EAAa,GACR,IAAfA,EAAkB,CACpB,IAAM3C,EAAkB+B,GAAY3C,KAAK,CACvCjK,MAAO6L,EAAU9H,KAAI,SAAAtD,GAAC,MAAK,CAACgM,UAAWhM,EAAElB,QAAQmB,GAAIC,MAAOF,EAAEE,UAC9DqL,YAEF5K,IAAMC,IAAN,UAAa/B,EAAUE,MAAvB,UAAsCqL,GACnCzF,MAAK,WACJpE,Ed/Ce,uCAAM,WAAOA,EAAeC,GAAtB,iBAAAC,EAAA,6DAC7BF,EAASpB,EAAUuB,QAAQJ,aADE,EAEDE,IAAZjB,EAFa,EAErBL,KAAQK,MAFa,SAGvBoB,IAAMC,IAAN,UAAa/B,EAAUK,KAAvB,iBAA4C,CAAEK,SAAS,CAC3DsB,QAAS,CACPC,cAAc,SAAD,OAAWC,aAAaC,QAAQ,2BALpB,2CAAN,yDcgDfgM,EAAcD,EAAa,QAwDvBjJ,UAAWhB,EAAQ2J,OACnBnD,SAAyB,IAAfyD,IAAqBI,GAE9BJ,IAAeL,GAAM5H,OAAS,EAAI,cAAgB,W,gECzKlD,SAAS4I,KACtB,MAA4B3K,mBAAc,IAA1C,mBAAO4K,EAAP,KAAeC,EAAf,KAEA1K,qBAAU,WACRvC,IAAM+D,IAAN,UAAa7F,EAAUE,MAAvB,WACG4F,MAAK,SAAAqF,GAAG,OAAI4D,EAAU5D,EAAIpF,WAC5B,IAYH,OACE,kBAACiJ,GAAA,EAAD,CAAgBxJ,UAAWiE,MACzB,kBAACwF,GAAA,EAAD,CAAO9I,aAAW,gBAChB,kBAAC+I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,CAAWvM,MAAM,SAAjB,eACA,kBAACuM,GAAA,EAAD,CAAWvM,MAAM,SAAjB,WACA,kBAACuM,GAAA,EAAD,CAAWvM,MAAM,SAAjB,UACA,kBAACuM,GAAA,EAAD,CAAWvM,MAAM,SAAjB,YAGJ,kBAACwM,GAAA,EAAD,KACGP,EAAOrK,KAAI,SAACvE,GAAD,iBACV,kBAACiP,GAAA,EAAD,CAAUvK,IAAK1E,EAAMkB,IACnB,kBAACgO,GAAA,EAAD,CAAW5J,UAAU,KAAK8J,MAAM,OAAhC,UACGpP,EAAMwM,eADT,aACG,EAAeC,UADlB,cAC8BzM,EAAMwM,eADpC,aAC8B,EAAeE,UAE7C,kBAACwC,GAAA,EAAD,CAAWvM,MAAM,SAAS3C,EAAMQ,MAAMuF,QACtC,kBAACmJ,GAAA,EAAD,CAAWvM,MAAM,SAAjB,UAA0B3C,EAAMwM,eAAhC,aAA0B,EAAeA,SACzC,kBAAC0C,GAAA,EAAD,CAAWvM,MAAM,SAAS3C,EAAMqP,cAAcrP,EAAMqP,cAActJ,OAAO,GAAGuH,OAAOgC,eACnF,kBAACJ,GAAA,EAAD,CAAWvM,MAAM,SACf,kBAAC0H,GAAA,EAAD,CAAQkF,KAAK,QAAQ9M,MAAM,UAAU6C,UAAWY,KAAMC,GAAE,uBAAkBnG,EAAMkB,KAAhF,UAGA,kBAACmJ,GAAA,EAAD,CAAQkF,KAAK,QAAQ9M,MAAM,YAAYD,QAAS,kBAnC5CtB,EAmC2DlB,EAAMkB,QAlCjFU,IAAM4N,OAAN,UAAgB1P,EAAUE,MAA1B,kBAAyCkB,IACtC0E,MAAK,WACJhE,IAAM+D,IAAN,UAAa7F,EAAUE,MAAvB,WACG4F,MAAK,SAAAqF,GAAG,OAAI4D,EAAU5D,EAAIpF,YAJlB,IAAC3E,IAmCJ,kBCnDhB,IAAM0B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,QAAS,CACP5B,QAASd,EAAMe,QAAQ,EAAG,EAAG,QAIlB,SAAS4L,KACtB,IAAM1L,EAAUnB,KAEhB,OACE,yBAAKmC,UAAWhB,EAAQyB,SACtB,kBAAC9C,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,GAArC,iBAGA,kBAACuJ,GAAD,OCnBC,IAAMe,GAED,WAOCC,GAAoB,CARzB,OAUND,GARW,YACL,OACK,YACA,aCiBPlG,GAAO,SAACC,GACZ,IACE2B,EAoBE3B,EApBF2B,OAGA1B,EAiBED,EAjBFC,MACAC,EAgBEF,EAhBFE,aACAC,EAeEH,EAfFG,QAGAC,EAYEJ,EAZFI,aAaE+F,EAAa,GAUjB,OATKxE,EAAOkC,SAAYoC,KACtBE,EAAa,yEASb,0BAAM9F,SAAUD,EAAcE,aAAa,OACzC,kBAAC1F,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,GACvB,kBAACQ,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,IACb,kBAAC,KAAD,CACEW,UAAW0E,KACX1J,KAAK,SACL2J,MAAM,SACN4F,QAAM,EACN3F,WAAS,EACT0F,WAAYA,GAEXD,GAAkBpL,KAAI,SAAC+I,EAAO9I,GAAR,OACrB,kBAACwD,EAAA,EAAD,CAAUtD,IAAKF,EAAOsL,MAAOxC,GAC1BA,QAKT,kBAACjJ,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,IACb,kBAAC,KAAD,CACEW,UAAW0E,KACX1J,KAAK,UACL2J,MAAM,UACNC,WAAS,EACTH,aAAa,MACbI,WAAS,KAGb,kBAAC9F,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACK,GAAI,GAAIyF,QAAQ,iBACnC,kBAACC,GAAA,EAAD,CACEC,KAAK,SACLjF,QAAQ,YACR5C,MAAM,UACN8H,UAAWb,GAASC,IAAiBC,GAJvC,qBAcK,SAASmG,KACtB,IAAO7O,EAAM2J,eAAN3J,GACP,EAA0B8C,mBAAc,IAAxC,mBAAOhE,EAAP,KAAcgQ,EAAd,KACA,EAAkChM,mBAAqB,IAAvD,mBAAOqI,EAAP,KAAkB4D,EAAlB,KACA,EAAkCjM,oBAAkB,GAApD,mBAAO+G,EAAP,KAAkBC,EAAlB,KA4BA,GArBA7G,qBAAU,WACR,GAAKjD,EAAL,CAIA,IAAMgP,EAAkB,CACtBtO,IAAM+D,IAAN,UAAa7F,EAAUC,QAAvB,aACA6B,IAAM+D,IAAN,UAAa7F,EAAUE,MAAvB,kBAAsCkB,KAExCiP,QAAQC,IAAIF,GACTtK,MAAK,YAAwC,IAAD,mBAA9B3B,EAA8B,KAApC4B,KAAwB7F,EAAY,KAAlB6F,KACnBwG,EAAwBrM,EAAMQ,MAAM+D,KAAI,SAACtD,GAAD,MAAmB,CAC/DlB,QAASkE,EAASjD,MAAK,SAACqP,GAAD,OAAgBA,EAAEnP,KAAOD,EAAEgM,aAClD9L,MAAOF,EAAEE,UAEX6O,EAAShQ,GACTiQ,EAAa5D,GACbrB,GAAa,WAffA,GAAa,KAiBd,CAAC9J,IAEA6J,EAAW,OAAO,yCAEtB,IAAMsE,EAAgBrP,EAAMqP,eAAiB,GAEvCiB,EAAiBjB,EAAcA,EAActJ,OAAS,GAE5D,OACE,kBAAC,GAAD,KACE,kBAACrD,EAAA,EAAD,CAAY4C,UAAU,KAAKD,QAAQ,KAAK1C,MAAM,UAA9C,gBAGA,kBAAC4J,GAAD,CAAaC,QAASxM,EAAMwM,QAAShM,MAAO6L,IAC5C,kBAAC3J,EAAA,EAAD,CAAY2C,QAAQ,MAApB,WAGA,kBAAC3C,EAAA,EAAD,CAAY2C,QAAQ,KAAK5C,MAAM,WAA/B,OACG6N,QADH,IACGA,OADH,EACGA,EAAgBhD,OAAOgC,eAE1B,kBAAC5M,EAAA,EAAD,CAAY2C,QAAQ,MAApB,kBAGA,kBAAC,KAAD,CACE6F,cAAe,CAACoC,OAAQgD,EAAehD,OAAQV,QAAS,IACxD6B,oBAAkB,EAClB3E,SAlDiB,SAACsB,GACtB,OAAOxJ,IAAMC,IAAN,UAAa/B,EAAUE,MAAvB,kBAAsCA,EAAMkB,GAA5C,WAAyDkK,GAC7DxF,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYmK,EAASnK,SAkDxB,SAAC4D,GAAD,OAAsC,kBAAC,GAASA,MAEnD,kBAAC/G,EAAA,EAAD,CAAY2C,QAAQ,MAApB,mBAGA,kBAACyJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAO9I,aAAW,gBAChB,kBAAC+I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,CAAWvM,MAAM,SAAjB,iBACA,kBAACuM,GAAA,EAAD,CAAWvM,MAAM,SAAjB,aAGJ,kBAACwM,GAAA,EAAD,KACGE,EAAc9K,KAAI,SAACgM,GAAD,OACjB,kBAACtB,GAAA,EAAD,CAAUvK,IAAK1E,EAAMkB,IACnB,kBAACgO,GAAA,EAAD,CAAW5J,UAAU,KAAK8J,MAAM,OAC7BmB,EAAkBjD,OAAOgC,eAE5B,kBAACJ,GAAA,EAAD,CAAWvM,MAAM,SAAU,IAAIwF,KAAKoI,EAAkBC,WAAYC,YAClE,kBAACvB,GAAA,EAAD,CAAWvM,MAAM,SAAS4N,EAAkB3D,iBCrK7C,SAAS8D,KACtB,MAAgC1M,mBAAc,IAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRvC,IAAM+D,IAAN,UAAa7F,EAAUI,IAAvB,aACG0F,MAAK,SAAAqF,GAAG,OAAI/G,EAAY+G,EAAIpF,WAC9B,IAYH,OACE,kBAACiJ,GAAA,EAAD,CAAgBxJ,UAAWiE,MACzB,kBAACwF,GAAA,EAAD,CAAO9I,aAAW,gBAChB,kBAAC+I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,CAAWvM,MAAM,SAAjB,eACA,kBAACuM,GAAA,EAAD,CAAWvM,MAAM,SAAjB,SACA,kBAACuM,GAAA,EAAD,CAAWvM,MAAM,SAAjB,SACA,kBAACuM,GAAA,EAAD,CAAWvM,MAAM,SAAjB,YAGJ,kBAACwM,GAAA,EAAD,KACGlL,EAASM,KAAI,SAACxE,GAAD,OACZ,kBAACkP,GAAA,EAAD,CAAUvK,IAAK3E,EAAQmB,IACrB,kBAACgO,GAAA,EAAD,CAAW5J,UAAU,KAAK8J,MAAM,OAC7BrP,EAAQmF,OAEX,kBAACgK,GAAA,EAAD,CAAWvM,MAAM,SAAS5C,EAAQ+I,aAClC,kBAACoG,GAAA,EAAD,CAAWvM,MAAM,SAAShD,EAAcI,EAAQH,QAChD,kBAACsP,GAAA,EAAD,CAAWvM,MAAM,SAAS5C,EAAQoB,OAClC,kBAAC+N,GAAA,EAAD,CAAWvM,MAAM,SACf,kBAAC0H,GAAA,EAAD,CAAQkF,KAAK,QAAQ9M,MAAM,UAAU6C,UAAWY,KAAMC,GAAE,8BAAyBpG,EAAQmB,KAAzF,UAGA,kBAACmJ,GAAA,EAAD,CAAQkF,KAAK,QAAQ9M,MAAM,YAAYD,QAAS,kBAnC5CtB,EAmC2DnB,EAAQmB,QAlCnFU,IAAM4N,OAAN,UAAgB1P,EAAUI,IAA1B,oBAAyCgB,IACtC0E,MAAK,WACJhE,IAAM+D,IAAN,UAAa7F,EAAUI,IAAvB,aACG0F,MAAK,SAAAqF,GAAG,OAAI/G,EAAY+G,EAAIpF,YAJpB,IAAC3E,IAmCJ,kBCpDhB,IAAM0B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,QAAS,CACP5B,QAASd,EAAMe,QAAQ,EAAG,EAAG,QASlB,SAAS8M,GAAT,GAA0D,IAAlCC,EAAiC,EAAjCA,IAAK1L,EAA4B,EAA5BA,MACpCnB,EAAUnB,KAChB,EAAwBoB,qBAAxB,mBAAO6M,EAAP,KAAaC,EAAb,KAaMC,EAAU,uCAAG,WAAOC,GAAP,iBAAAtP,EAAA,sEAEQE,IAAM,CAC3BqP,OAAQ,MACRL,MACAM,OAAQ,CACN5Q,KAAM6Q,mBAAmBN,EAAKvQ,SANnB,cAET8Q,EAFS,OASfC,QAAQC,IAAI,mBAAoBT,EAAKvQ,MACrC+Q,QAAQC,IAAI,iBAAkBF,EAASvL,MAVxB,SAWM0L,MAAMH,EAASvL,KAAM,CACxCoL,OAAQ,MACRO,KAAMX,IAbO,OAWTY,EAXS,OAefJ,QAAQC,IAAI,WAAYG,GACxBX,EAAQ,IAhBO,4CAAH,sDAoBhB,OACE,yBAAK/L,UAAWhB,EAAQyB,SACtB,kBAAC9C,EAAA,EAAD,CAAY2C,QAAQ,KAAKD,cAAY,GAClCF,GAED2L,EAGA,6BACE,4BAAQrO,QAjCG,WACjBsO,EAAQ,MAgCF,eACA,4BAAQtO,QAASuO,GAAjB,gBAJA,2BAAOzG,KAAK,OAAOoH,SArCN,SAACV,GACpBK,QAAQC,IAAIN,GACZ,IAAIW,EAAQX,EAAEY,OAAOD,OAASX,EAAEa,aAAaF,MACxCA,EAAM5L,QACX+K,EAAQa,EAAMlN,KAAK,Q,cCfjB7B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,QAAS,CACP5B,QAASd,EAAMe,QAAQ,EAAG,EAAG,QAIlB,SAASiO,KACtB,IAAM/N,EAAUnB,KAEhB,OACE,yBAAKmC,UAAWhB,EAAQyB,SACtB,kBAACuM,GAAA,EAAD,CAAK9O,QAAQ,OAAO+O,WAAW,UAC7B,kBAACrB,GAAD,CAAeC,IAAG,UAAK9Q,EAAUG,OAAf,WAAgCiF,MAAM,wBACxD,kBAACmF,GAAA,EAAD,CAAQkF,KAAK,QAAQ9M,MAAM,UAAU4C,QAAQ,YAAYC,UAAWY,KAAMC,GAAI,wBAA9E,mBAIF,kBAACuK,GAAD,OCqBSuB,OAhCf,WAEE,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,KACV,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAOC,OAAK,EAACD,KAAK,KAChB,kBAACzM,EAAD,OAEF,kBAAC,KAAD,CAAO0M,OAAK,EAACD,KAAM,CAAC,0BAA2B,wBAC7C,kBAACxH,GAAD,OAEF,kBAAC,KAAD,CAAOyH,OAAK,EAACD,KAAK,SAChB,kBAACnE,GAAD,OAEF,kBAAC,KAAD,CAAOoE,OAAK,EAACD,KAAK,iBAChB,kBAACzC,GAAD,OAEF,kBAAC,KAAD,CAAO0C,OAAK,EAACD,KAAK,oBAChB,kBAACnC,GAAD,OAEF,kBAAC,KAAD,CAAOoC,OAAK,EAACD,KAAK,mBAChB,kBAACJ,GAAD,YC3BDM,GAAe/R,YAAY,CACtCC,KAAM,UACNC,aANiC,CACjCuP,MAAO,GAMPrP,SAAU,CACR4R,UAAW,SAAA1R,GAKTA,EAAMmP,OAAS,GAEjBwC,UAAW,SAAA3R,GACTA,EAAMmP,OAAS,GAGjByC,kBAAmB,SAAC5R,EAAOG,GACzBH,EAAMmP,OAAShP,EAAOF,YAKrB,GAAoDwR,GAAazQ,QAiBzDyQ,IAjBR,GAAQC,UAAR,GAAmBC,UAAnB,GAA8BC,kBAiBtBH,GAAf,SC7CaI,GAAQC,YAAe,CAClCC,QAAS,CACPC,QAASC,GACTzS,KAAM0S,KCKU7L,QACW,cAA7B8L,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCRNrR,IAAMsR,aAAa9B,SAAS+B,KAC1B,SAAA/B,GACE,OAAOA,KAET,SAASgC,GAAQ,IAAD,IACuB,EAAL,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOhC,gBAAP,eAAiB9D,SACnB+F,MAAK,UAACD,EAAMhC,SAASvL,YAAhB,aAAC,EAAqBA,MAG7B,OAAOsK,QAAQmD,OAAR,iBAAeF,QAAf,IAAeA,OAAf,EAAeA,EAAOhC,gBAAtB,QAAkCgC,MAI7CG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUjB,MAAOA,IACf,kBAACkB,GAAA,EAAD,MACA,kBAAC,GAAD,QAGJC,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnO,MAAK,SAAAoO,GACJA,EAAaC,gBAEdC,OAAM,SAAAd,GACL/B,QAAQ+B,MAAMA,EAAMe,c","file":"static/js/main.0d8b747b.chunk.js","sourcesContent":["const priceFormatter = new Intl.NumberFormat('en-US', {\r\n  style: 'currency',\r\n  currency: 'USD',\r\n});\r\n\r\nexport const formatAsPrice = (price: number) => priceFormatter.format(price);","\r\nconst API_PATHS = {\r\n  product: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\r\n  order: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\r\n  import: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\r\n  bff: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\r\n  cart: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\r\n};\r\n\r\nexport default API_PATHS;\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {RootState} from 'store/store';\r\nimport {Product} from \"models/Product\";\r\nimport {CartItem} from \"models/CartItem\";\r\nimport API_PATHS from \"../constants/apiPaths\";\r\nimport axios from 'axios';\r\n\r\ninterface CartState {\r\n  items: CartItem[]\r\n}\r\n\r\nconst initialState: CartState = {\r\n  items: [],\r\n};\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    updateFromApi: (state, { payload: { items } }: PayloadAction<CartState>) => {\r\n      return {\r\n        items: [\r\n            ...items,\r\n        ],\r\n      }\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    addToCart: (state, action: PayloadAction<Product>) => {\r\n      const {items} = state;\r\n      const {payload: product} = action;\r\n      const existingItem = items.find(i => i.product.id === product.id);\r\n      if (existingItem) {\r\n        existingItem.count++;\r\n        return;\r\n      }\r\n      items.push({product, count: 1});\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    removeFromCart: (state, action: PayloadAction<Product>) => {\r\n      let {items} = state;\r\n      const {payload: product} = action;\r\n      const existingItem = items.find(i => i.product.id === product.id);\r\n      if (!existingItem) return;\r\n      if (existingItem.count > 1) {\r\n        existingItem.count--;\r\n        return;\r\n      }\r\n      state.items = items.filter(i => i.product.id !== product.id);\r\n    },\r\n    clearCart: (state) => {\r\n      state.items = [];\r\n    }\r\n  },\r\n});\r\n\r\nexport const addToCart = (product: Product) => async (dispatch: any, getState: any) => {\r\n  dispatch(cartSlice.actions.addToCart(product));\r\n  const { cart: { items } } = getState();\r\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\r\n    headers: {\r\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\r\n    },\r\n  })\r\n};\r\n\r\nexport const removeFromCart = (product: Product) => async (dispatch: any, getState: any) => {\r\n  dispatch(cartSlice.actions.removeFromCart(product));\r\n  const { cart: { items } } = getState();\r\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\r\n    headers: {\r\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\r\n    },\r\n  })\r\n};\r\n\r\nexport const clearCart = () => async (dispatch: any, getState: any) => {\r\n  dispatch(cartSlice.actions.clearCart());\r\n  const { cart: { items } } = getState();\r\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\r\n    headers: {\r\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\r\n    },\r\n  })\r\n};\r\n\r\nexport const {updateFromApi} = cartSlice.actions;\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.cart.value)`\r\nexport const selectCartItems = (state: RootState) => state.cart.items;\r\n\r\nexport default cartSlice.reducer;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Product} from \"models/Product\";\r\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addToCart, selectCartItems, removeFromCart} from \"store/cartSlice\";\r\n\r\ntype AddProductToCartProps = {\r\n  product: Product\r\n};\r\n\r\nexport default function AddProductToCart({product}: AddProductToCartProps) {\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector(selectCartItems);\r\n  const cartItem = cartItems.find(i => i.product.id === product.id);\r\n\r\n  return (\r\n    <>\r\n    {\r\n      cartItem ?\r\n        (\r\n          <>\r\n            <IconButton onClick={() => dispatch(removeFromCart(product))}>\r\n              <Remove color={\"secondary\"}/>\r\n            </IconButton>\r\n            <Typography align=\"center\">\r\n              {cartItem.count}\r\n            </Typography>\r\n            <IconButton onClick={() => dispatch(addToCart(product))}>\r\n              <Add color={\"secondary\"}/>\r\n            </IconButton>\r\n            </>\r\n        )\r\n        :\r\n        (\r\n          <IconButton onClick={() => dispatch(addToCart(product))}>\r\n            <CartIcon color={\"secondary\"}/>\r\n          </IconButton>\r\n        )\r\n    }\r\n    </>\r\n  );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Product} from \"models/Product\";\r\nimport {formatAsPrice} from \"utils/utils\";\r\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\r\n// import axios from 'axios';\r\n// import API_PATHS from \"constants/apiPaths\";\r\nimport productList from \"./productList.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function Products() {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    // axios.get(`${API_PATHS.bff}/product/available/`)\r\n    //   .then(res => setProducts(res.data));\r\n    setProducts(productList);\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {products.map((product: Product, index: number) => (\r\n        <Grid item key={product.id} xs={12} sm={6} md={4}>\r\n          <Card className={classes.card}>\r\n            <CardMedia\r\n              className={classes.cardMedia}\r\n              image={`https://source.unsplash.com/random?sig=${index}`}\r\n              title=\"Image title\"\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {product.title}\r\n              </Typography>\r\n              <Typography>\r\n                {formatAsPrice(product.price)}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <AddProductToCart product={product}/>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Products from \"components/pages/PageProducts/components/Products\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3, 0, 3),\r\n  },\r\n}));\r\n\r\nexport default function PageProducts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Products/>\r\n    </div>\r\n  );\r\n}\r\n","import Badge from \"@material-ui/core/Badge\";\r\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport React, { useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCartItems, updateFromApi } from \"store/cartSlice\";\r\nimport { Link } from 'react-router-dom';\r\nimport API_PATHS from \"../../../constants/apiPaths\";\r\n\r\nexport default function Cart() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios.get(\r\n        `${API_PATHS.cart}/profile/cart`,\r\n        {\r\n          headers: {\r\n            Authorization: `Basic ${localStorage.getItem('authorization_token')}`\r\n          }\r\n        }\r\n    ).then(({ data: { data: { cart } } }) => {\r\n      dispatch(updateFromApi(cart))\r\n    });\r\n  }, [dispatch]);\r\n  const cartItems = useSelector(selectCartItems);\r\n  const badgeContent = cartItems.length || undefined;\r\n\r\n  return (\r\n    <IconButton\r\n      aria-label=\"show 4 new mails\"\r\n      color=\"inherit\"\r\n      component={Link}\r\n      to=\"/cart\"\r\n    >\r\n      <Badge badgeContent={badgeContent} color=\"secondary\">\r\n        <CartIcon/>\r\n      </Badge>\r\n    </IconButton>\r\n  );\r\n}\r\n","\r\n\r\nimport React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Cart from \"components/MainLayout/components/Cart\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    homeLink: {\r\n      color: 'white',\r\n      textDecoration: 'none'\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const auth = true;\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"relative\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          <Link className={classes.homeLink} to=\"/\">My Store?????</Link>\r\n        </Typography>\r\n\r\n        {auth && (\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle/>\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem component={Link} to=\"/admin/orders\" onClick={handleClose}>Manage orders</MenuItem>\r\n              <MenuItem component={Link} to=\"/admin/products\" onClick={handleClose}>Manage products</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n        <Cart/>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from \"components/MainLayout/components/Header\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        My Store\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst MainLayout: React.FC = ({children}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n      <main>\r\n        <Container className={classes.container} maxWidth=\"md\">\r\n          {children!}\r\n        </Container>\r\n      </main>\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Thank you for your purchase!\r\n        </Typography>\r\n        <Copyright/>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainLayout;","import * as Yup from 'yup';\r\n\r\nexport type Product = {\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  price: number,\r\n};\r\n\r\nexport const ProductSchema = Yup.object().shape({\r\n  title: Yup.string().required(),\r\n  description: Yup.string(),\r\n  price: Yup.number().required(),\r\n});\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nconst PaperLayout:React.FC = ({children}) =>  {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.layout}>\r\n      <Paper className={classes.paper}>\r\n        {children}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaperLayout;","import React, {useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Product, ProductSchema} from \"models/Product\";\r\nimport {Formik, Field, FormikProps, FormikValues} from 'formik';\r\nimport {TextField} from 'formik-material-ui';\r\nimport axios from 'axios';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API_PATHS from \"constants/apiPaths\";\r\n\r\nconst Form = (props: FormikProps<FormikValues>) => {\r\n  const {\r\n    // values,\r\n    // touched,\r\n    // errors,\r\n    dirty,\r\n    isSubmitting,\r\n    isValid,\r\n    // handleChange,\r\n    // handleBlur,\r\n    handleSubmit,\r\n    // handleReset,\r\n    // setFieldValue,\r\n    // isEditMode,\r\n    // onCancel,\r\n    // isButtonContact,\r\n    // setTouched,\r\n    // isButtonAddAndRedirect,\r\n    // setShouldRedirect,\r\n    // submitForm,\r\n    // onGetCitizen,\r\n    // shouldConfirmLeave,\r\n  } = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Field\r\n            component={TextField}\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Field\r\n            component={TextField}\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            multiline\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Field\r\n            component={TextField}\r\n            name=\"price\"\r\n            label=\"Price ($)\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Field\r\n            component={TextField}\r\n            name=\"count\"\r\n            label=\"Count\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item container xs={12} justify=\"space-between\">\r\n          <Button\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={!dirty || isSubmitting || !isValid}\r\n          >\r\n            Save Product\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emptyValues: any = ProductSchema.cast();\r\n\r\nexport default function PageProductForm() {\r\n  const history = useHistory();\r\n  const {id} = useParams<{ id: string }>();\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const onSubmit = (values: FormikValues) => {\r\n    const formattedValues = ProductSchema.cast(values);\r\n    const productToSave = id ? {...ProductSchema.cast(formattedValues), id} : formattedValues;\r\n    axios.put(`${API_PATHS.bff}/product`, productToSave)\r\n      .then(() => history.push('/admin/products'));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    axios.get(`${API_PATHS.bff}/product/${id}`)\r\n      .then(res => {\r\n        setProduct(res.data);\r\n        setIsLoading(false);\r\n      });\r\n  }, [id])\r\n\r\n  if (isLoading) return <p>loading...</p>;\r\n\r\n  return (\r\n    <PaperLayout>\r\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n        {id ? 'Edit product' : 'Create new product'}\r\n      </Typography>\r\n      <Formik\r\n        initialValues={product || emptyValues}\r\n        validationSchema={ProductSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\r\n      </Formik>\r\n    </PaperLayout>\r\n  );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {CartItem} from \"models/CartItem\";\r\nimport {formatAsPrice} from \"utils/utils\";\r\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\ntype CartItemsProps = {\r\n  items: CartItem[],\r\n  isEditable: boolean\r\n};\r\n\r\nexport default function CartItems({items, isEditable}: CartItemsProps) {\r\n  const classes = useStyles();\r\n\r\n  const totalPrice: number = items.reduce((total, item) => (item.count * item.product.price + total), 0);\r\n\r\n  return (\r\n    <>\r\n      <List disablePadding>\r\n        {items.map((cartItem: CartItem) => (\r\n          <ListItem className={classes.listItem} key={cartItem.product.id}>\r\n            {isEditable && <AddProductToCart product={cartItem.product}/>}\r\n            <ListItemText primary={cartItem.product.title} secondary={cartItem.product.description}/>\r\n            <Typography\r\n              variant=\"body2\">{formatAsPrice(cartItem.product.price)} x {cartItem.count} = {formatAsPrice(cartItem.product.price * cartItem.count)}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Shipping\"/>\r\n          <Typography\r\n            variant=\"body2\">Free</Typography>\r\n        </ListItem>\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\"/>\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {formatAsPrice(totalPrice)}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CartItems from \"components/CartItems/CartItems\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectCartItems} from \"store/cartSlice\";\r\n\r\nexport default function ReviewCart() {\r\n  const cartItems = useSelector(selectCartItems);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <CartItems items={cartItems} isEditable/>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CartItems from \"components/CartItems/CartItems\";\r\nimport {FormikValues} from \"formik\";\r\nimport {CartItem} from \"models/CartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\ntype ReviewOrderProps = {\r\n  address: FormikValues,\r\n  items: CartItem[]\r\n};\r\n\r\nexport default function ReviewOrder({address, items}:ReviewOrderProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <CartItems items={items} isEditable={false}/>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>{address.firstName} {address.lastName}</Typography>\r\n          <Typography gutterBottom>{address.address}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Comment\r\n          </Typography>\r\n          <Typography gutterBottom>{address.comment}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import * as Yup from 'yup';\r\n\r\nexport const AddressSchema = Yup.object({\r\n  firstName: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  address: Yup.string().required(),\r\n  comment: Yup.string().default(''),\r\n}).defined();\r\n\r\nexport type Address = Yup.InferType<typeof AddressSchema>;\r\n\r\n\r\nexport const OrderItemSchema = Yup.object({\r\n  productId: Yup.string().required(),\r\n  count: Yup.number().integer().positive().required()\r\n}).defined();\r\n\r\nexport type OrderItem = Yup.InferType<typeof OrderItemSchema>;\r\n\r\n\r\nexport const OrderSchema = Yup.object({\r\n  id: Yup.string().required(),\r\n  items: Yup.array().of(OrderItemSchema),\r\n  address: AddressSchema,\r\n  status: Yup.string().required(),\r\n}).defined();\r\n\r\nexport type Order = Yup.InferType<typeof OrderSchema>;\r\n","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReviewCart from 'components/pages/PageCart/components/ReviewCart';\r\nimport ReviewOrder from 'components/pages/PageCart/components/ReviewOrder';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectCartItems, clearCart} from \"store/cartSlice\";\r\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\r\nimport {Formik, Form, FormikProps, FormikValues, FastField} from \"formik\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {TextField} from 'formik-material-ui';\r\nimport axios from \"axios\";\r\nimport API_PATHS from \"constants/apiPaths\";\r\nimport {AddressSchema, OrderSchema} from \"models/Order\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Review your cart', 'Shipping address', 'Review your order'];\r\n\r\nconst initialAddressValues: any = AddressSchema.cast();\r\n\r\nconst CartIsEmpty = () => (\r\n  <Typography variant=\"h6\" gutterBottom>\r\n    The cart is empty. Didn't you like anything in our shop?\r\n  </Typography>\r\n);\r\n\r\nconst Success = () => (\r\n  <React.Fragment>\r\n    <Typography variant=\"h5\" gutterBottom>\r\n      Thank you for your order.\r\n    </Typography>\r\n    <Typography variant=\"subtitle1\">\r\n      Your order is placed. Our manager will call you soon to clarify the details.\r\n    </Typography>\r\n  </React.Fragment>\r\n);\r\n\r\nconst renderForm = () => (\r\n  <>\r\n    <Typography variant=\"h6\" gutterBottom>\r\n      Shipping address\r\n    </Typography>\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={6}>\r\n        <FastField\r\n          component={TextField}\r\n          name=\"lastName\"\r\n          label=\"Last Name\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FastField\r\n          component={TextField}\r\n          name=\"firstName\"\r\n          label=\"First Name\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FastField\r\n          component={TextField}\r\n          name=\"address\"\r\n          label=\"Shipping address\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          multiline\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FastField\r\n          component={TextField}\r\n          name=\"comment\"\r\n          label=\"Comment\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          multiline\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  </>\r\n);\r\n\r\nexport default function PageCart() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState<number>(0);\r\n  const cartItems = useSelector(selectCartItems);\r\n  const isCartEmpty = !cartItems.length;\r\n  const [address, setAddress] = useState<FormikValues>(initialAddressValues);\r\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n    if (activeStep === 2) {\r\n      const formattedValues = OrderSchema.cast({\r\n        items: cartItems.map(i => ({productId: i.product.id, count: i.count})),\r\n        address\r\n      });\r\n      axios.put(`${API_PATHS.order}/order`, formattedValues)\r\n        .then(() => {\r\n          dispatch(clearCart());\r\n          setActiveStep(activeStep + 1);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <PaperLayout>\r\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n        Checkout\r\n      </Typography>\r\n      <Stepper activeStep={activeStep} className={classes.stepper}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <React.Fragment>\r\n        <Formik\r\n          enableReinitialize={false}\r\n          initialValues={initialAddressValues}\r\n          validationSchema={AddressSchema}\r\n          isInitialValid={false}\r\n          onSubmit={() => undefined}\r\n        >\r\n          {(props: FormikProps<FormikValues>) => {\r\n            const {values, isValid} = props;\r\n            setAddress(values);\r\n            setIsFormValid(isValid);\r\n            return (\r\n              <Form>\r\n                {isCartEmpty && activeStep === 0 && <CartIsEmpty/>}\r\n                {activeStep === 0 && !isCartEmpty && <ReviewCart/>}\r\n                {activeStep === 1 && renderForm()}\r\n                {activeStep === 2 && <ReviewOrder address={address} items={cartItems}/>}\r\n                {activeStep === 3 && <Success/>}\r\n              </Form>\r\n            )\r\n          }}\r\n        </Formik>\r\n\r\n        {activeStep <= 2 && <div className={classes.buttons}>\r\n          {activeStep !== 0 && (\r\n            <Button onClick={handleBack} className={classes.button}>\r\n              Back\r\n            </Button>\r\n          )}\r\n          {!isCartEmpty && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleNext}\r\n              className={classes.button}\r\n              disabled={activeStep === 1 && !isFormValid}\r\n            >\r\n              {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n            </Button>)}\r\n        </div>}\r\n      </React.Fragment>\r\n    </PaperLayout>\r\n  );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport API_PATHS from \"constants/apiPaths\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function Orders() {\r\n  const [orders, setOrders] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_PATHS.order}/order`)\r\n      .then(res => setOrders(res.data));\r\n  }, []);\r\n\r\n  const onDelete = (id: string) => {\r\n    axios.delete(`${API_PATHS.order}/order/${id}`)\r\n      .then(() => {\r\n        axios.get(`${API_PATHS.order}/order`)\r\n          .then(res => setOrders(res.data));\r\n        }\r\n      );\r\n  };\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>From</TableCell>\r\n            <TableCell align=\"right\">Items count</TableCell>\r\n            <TableCell align=\"right\">Address</TableCell>\r\n            <TableCell align=\"right\">Status</TableCell>\r\n            <TableCell align=\"right\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((order: any) => (\r\n            <TableRow key={order.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {order.address?.firstName} {order.address?.lastName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{order.items.length}</TableCell>\r\n              <TableCell align=\"right\">{order.address?.address}</TableCell>\r\n              <TableCell align=\"right\">{order.statusHistory[order.statusHistory.length-1].status.toUpperCase()}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/order/${order.id}`}>\r\n                  Manage\r\n                </Button>\r\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(order.id)}>\r\n                  Delete\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Orders from \"components/pages/PageOrders/components/Orders\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3, 0, 3),\r\n  },\r\n}));\r\n\r\nexport default function PageOrders() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Manage orders\r\n      </Typography>\r\n      <Orders/>\r\n    </div>\r\n  );\r\n}\r\n","export const ORDER_STATUS = {\r\n  open: 'open',\r\n  approved: 'approved',\r\n  confirmed: 'confirmed',\r\n  sent: 'sent',\r\n  completed: 'completed',\r\n  cancelled: 'cancelled',\r\n};\r\n\r\nexport const ORDER_STATUS_FLOW = [\r\n  ORDER_STATUS.open,\r\n  ORDER_STATUS.approved,\r\n  ORDER_STATUS.confirmed,\r\n  ORDER_STATUS.sent,\r\n  ORDER_STATUS.completed,\r\n  ORDER_STATUS.cancelled,\r\n];\r\n","import React, {useEffect, useState} from 'react';\r\nimport {OrderItem} from \"models/Order\";\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport API_PATHS from \"constants/apiPaths\";\r\nimport {CartItem} from \"models/CartItem\";\r\nimport {Product} from \"models/Product\";\r\nimport ReviewOrder from \"components/pages/PageCart/components/ReviewOrder\";\r\nimport {ORDER_STATUS, ORDER_STATUS_FLOW} from \"constants/order\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {Field, Formik, FormikProps, FormikValues} from \"formik\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {TextField} from \"formik-material-ui\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n\r\nconst Form = (props: FormikProps<FormikValues>) => {\r\n  const {\r\n    values,\r\n    // touched,\r\n    // errors,\r\n    dirty,\r\n    isSubmitting,\r\n    isValid,\r\n    // handleChange,\r\n    // handleBlur,\r\n    handleSubmit,\r\n    // handleReset,\r\n    // setFieldValue,\r\n    // isEditMode,\r\n    // onCancel,\r\n    // isButtonContact,\r\n    // setTouched,\r\n    // isButtonAddAndRedirect,\r\n    // setShouldRedirect,\r\n    // submitForm,\r\n    // onGetCitizen,\r\n    // shouldConfirmLeave,\r\n  } = props;\r\n  let helperText = '';\r\n  if ((values.status) === ORDER_STATUS.approved) {\r\n    helperText = 'Setting status to APPROVED will decrease products count from stock!!!';\r\n  }\r\n  // TODO add check if status was changed from approved to cancelled\r\n  //  to increase product count back again\r\n  // if ((values.status) === ORDER_STATUS.cancelled) {\r\n  //   helperText = 'Setting status to CANCELLED will increase products count in stock!!!';\r\n  // }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Field\r\n            component={TextField}\r\n            name=\"status\"\r\n            label=\"Status\"\r\n            select\r\n            fullWidth\r\n            helperText={helperText}\r\n          >\r\n            {ORDER_STATUS_FLOW.map((status,index) => (\r\n              <MenuItem key={index} value={status}>\r\n                {status}\r\n              </MenuItem>\r\n            ))}\r\n          </Field>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Field\r\n            component={TextField}\r\n            name=\"comment\"\r\n            label=\"Comment\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            multiline\r\n          />\r\n        </Grid>\r\n        <Grid item container xs={12} justify=\"space-between\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={!dirty || isSubmitting || !isValid}\r\n          >\r\n            Change status\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default function PageOrder() {\r\n  const {id} = useParams<{ id: string }>();\r\n  const [order, setOrder] = useState<any>({});\r\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const onChangeStatus = (values: FormikValues) => {\r\n    return axios.put(`${API_PATHS.order}/order/${order.id}/status`, values)\r\n      .then(({data}) => setOrder(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    const promises: any[] = [\r\n      axios.get(`${API_PATHS.product}/product`),\r\n      axios.get(`${API_PATHS.order}/order/${id}`)\r\n    ];\r\n    Promise.all(promises)\r\n      .then(([{data: products}, {data: order}]) => {\r\n        const cartItems: CartItem[] = order.items.map((i: OrderItem) => ({\r\n          product: products.find((p: Product) => p.id === i.productId),\r\n          count: i.count\r\n        }));\r\n        setOrder(order);\r\n        setCartItems(cartItems);\r\n        setIsLoading(false);\r\n      });\r\n  }, [id])\r\n\r\n  if (isLoading) return <p>loading...</p>;\r\n\r\n  const statusHistory = order.statusHistory || [];\r\n\r\n  const lastStatusItem = statusHistory[statusHistory.length - 1];\r\n\r\n  return (\r\n    <PaperLayout>\r\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n        Manage order\r\n      </Typography>\r\n      <ReviewOrder address={order.address} items={cartItems}/>\r\n      <Typography variant=\"h6\">\r\n        Status:\r\n      </Typography>\r\n      <Typography variant=\"h6\" color=\"primary\">\r\n        {lastStatusItem?.status.toUpperCase()}\r\n      </Typography>\r\n      <Typography variant=\"h6\">\r\n        Change status:\r\n      </Typography>\r\n      <Formik\r\n        initialValues={{status: lastStatusItem.status, comment: ''}}\r\n        enableReinitialize\r\n        onSubmit={onChangeStatus}\r\n      >\r\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\r\n      </Formik>\r\n      <Typography variant=\"h6\">\r\n        Status history:\r\n      </Typography>\r\n      <TableContainer>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell align=\"right\">Date and Time</TableCell>\r\n              <TableCell align=\"right\">Comment</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {statusHistory.map((statusHistoryItem: any) => (\r\n              <TableRow key={order.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {statusHistoryItem.status.toUpperCase()}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{(new Date(statusHistoryItem.timestamp)).toString()}</TableCell>\r\n                <TableCell align=\"right\">{statusHistoryItem.comment}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </PaperLayout>\r\n  );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport API_PATHS from \"constants/apiPaths\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {formatAsPrice} from \"utils/utils\";\r\n\r\nexport default function ProductsTable() {\r\n  const [products, setProducts] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_PATHS.bff}/product`)\r\n      .then(res => setProducts(res.data));\r\n  }, []);\r\n\r\n  const onDelete = (id: string) => {\r\n    axios.delete(`${API_PATHS.bff}/product/${id}`)\r\n      .then(() => {\r\n        axios.get(`${API_PATHS.bff}/product`)\r\n          .then(res => setProducts(res.data));\r\n        }\r\n      );\r\n  };\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell align=\"right\">Description</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"right\">Count</TableCell>\r\n            <TableCell align=\"right\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products.map((product: any) => (\r\n            <TableRow key={product.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {product.title}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{product.description}</TableCell>\r\n              <TableCell align=\"right\">{formatAsPrice(product.price)}</TableCell>\r\n              <TableCell align=\"right\">{product.count}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/product-form/${product.id}`}>\r\n                  Manage\r\n                </Button>\r\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(product.id)}>\r\n                  Delete\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3, 0, 3),\r\n  },\r\n}));\r\n\r\ntype CSVFileImportProps = {\r\n  url: string,\r\n  title: string\r\n};\r\n\r\nexport default function CSVFileImport({url, title}: CSVFileImportProps) {\r\n  const classes = useStyles();\r\n  const [file, setFile] = useState<any>();\r\n\r\n  const onFileChange = (e: any) => {\r\n    console.log(e);\r\n    let files = e.target.files || e.dataTransfer.files\r\n    if (!files.length) return\r\n    setFile(files.item(0));\r\n  };\r\n\r\n  const removeFile = () => {\r\n    setFile('');\r\n  };\r\n\r\n  const uploadFile = async (e: any) => {\r\n      // Get the presigned URL\r\n      const response = await axios({\r\n        method: 'GET',\r\n        url,\r\n        params: {\r\n          name: encodeURIComponent(file.name)\r\n        }\r\n      })\r\n      console.log('File to upload: ', file.name)\r\n      console.log('Uploading to: ', response.data)\r\n      const result = await fetch(response.data, {\r\n        method: 'PUT',\r\n        body: file\r\n      })\r\n      console.log('Result: ', result)\r\n      setFile('');\r\n    }\r\n  ;\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      {!file ? (\r\n          <input type=\"file\" onChange={onFileChange}/>\r\n      ) : (\r\n        <div>\r\n          <button onClick={removeFile}>Remove file</button>\r\n          <button onClick={uploadFile}>Upload file</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport API_PATHS from \"constants/apiPaths\";\r\nimport ProductsTable from \"components/pages/admin/PageProductImport/components/ProductsTable\";\r\nimport CSVFileImport from \"components/pages/admin/PageProductImport/components/CSVFileImport\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3, 0, 3),\r\n  },\r\n}));\r\n\r\nexport default function PageProductImport() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <CSVFileImport url={`${API_PATHS.import}/import`} title=\"Import Products CSV\"/>\r\n        <Button size=\"small\" color=\"primary\" variant=\"contained\" component={Link} to={'/admin/product-form/'}>\r\n          create product\r\n        </Button>\r\n      </Box>\r\n      <ProductsTable/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport 'components/App/App.css';\r\nimport PageProducts from \"components/pages/PageProducts/PageProducts\";\r\nimport MainLayout from \"components/MainLayout/MainLayout\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport PageProductForm from \"components/pages/PageProductForm/PageProductForm\";\r\nimport PageCart from \"components/pages/PageCart/PageCart\";\r\nimport PageOrders from \"components/pages/PageOrders/PageOrders\";\r\nimport PageOrder from \"components/pages/PageOrder/PageOrder\";\r\nimport PageProductImport from \"components/pages/admin/PageProductImport/PageProductImport\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          <MainLayout>\r\n            <Route exact path=\"/\">\r\n              <PageProducts/>\r\n            </Route>\r\n            <Route exact path={[\"/admin/product-form/:id\", '/admin/product-form']}>\r\n              <PageProductForm/>\r\n            </Route>\r\n            <Route exact path=\"/cart\">\r\n              <PageCart />\r\n            </Route>\r\n            <Route exact path=\"/admin/orders\">\r\n              <PageOrders />\r\n            </Route>\r\n            <Route exact path=\"/admin/order/:id\">\r\n              <PageOrder />\r\n            </Route>\r\n            <Route exact path=\"/admin/products\">\r\n              <PageProductImport />\r\n            </Route>\r\n          </MainLayout>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from 'store/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from 'store/counterSlice';\r\nimport cartReducer from 'store/cartSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    cart: cartReducer\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'index.css';\r\nimport App from 'components/App/App';\r\nimport {store} from 'store/store';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport axios from 'axios';\r\n\r\naxios.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  function(error) {\r\n    if (error?.response?.status === 400) {\r\n      alert(error.response.data?.data);\r\n    }\r\n\r\n    return Promise.reject(error?.response ?? error);\r\n  }\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <CssBaseline/>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}